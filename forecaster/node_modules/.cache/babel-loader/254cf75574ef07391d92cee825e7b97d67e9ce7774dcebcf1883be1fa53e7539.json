{"ast":null,"code":"var _jsxFileName = \"/root/Projektuppgift-i-introduktion-till-datalogi/forecaster/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport './weatherFetcher.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst weatherFetcher = require(\"./weatherFetcher\");\nfunction App() {\n  _s();\n  const [formData, setFormData] = useState({\n    date: '',\n    time: '',\n    location: ''\n  });\n  const [backgroundImage, setBackgroundImage] = useState(\"https://images.unsplash.com/photo-1464822759023-fed622ff2c3b\");\n  const [showPopup, setShowPopup] = useState(false);\n  const [temperature, setTemperature] = useState(null);\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    console.log(name, value);\n    setFormData(prevFormData => ({\n      ...prevFormData,\n      [name]: value\n    }));\n  };\n  async function forecastCollecter(date, time, location) {\n    const weatherResponse = await weatherFetcher.weatherData(date, time, location);\n    console.log(weatherResponse);\n    setTemperature(weatherResponse.temperature); // Replace 'temperature' with the correct property name from the API response\n  }\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    console.log('Input value:', formData);\n    const {\n      date,\n      time,\n      location\n    } = formData;\n    forecastCollecter(date, time, location);\n    setShowPopup(true);\n  };\n  const closePopup = () => {\n    setShowPopup(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    style: {\n      backgroundImage: `url(${backgroundImage})`\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Forecaster\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Enter required information to forecast weather\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"forecast-date\",\n            children: \"Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            id: \"forecast-date\",\n            value: formData.date,\n            onChange: handleChange,\n            name: \"date\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"forecast-time\",\n            children: \"Time:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"time\",\n            id: \"forecast-time\",\n            value: formData.time,\n            onChange: handleChange,\n            name: \"time\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"forecast-location\",\n            children: \"Location:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"forecast-location\",\n            value: formData.location,\n            onChange: handleChange,\n            placeholder: \"Enter location\",\n            name: \"location\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), showPopup && /*#__PURE__*/_jsxDEV(Popup, {\n      temperature: temperature,\n      onClose: closePopup\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"nmKfKl1N/HV//ti9xZMVWrR6I9U=\");\n_c = App;\nfunction Popup(_ref) {\n  let {\n    temperature,\n    onClose\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"popup\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Temperature\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [temperature, \"\\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClose,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 9\n  }, this);\n}\n_c2 = Popup;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Popup\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","weatherFetcher","require","App","_s","formData","setFormData","date","time","location","backgroundImage","setBackgroundImage","showPopup","setShowPopup","temperature","setTemperature","handleChange","event","name","value","target","console","log","prevFormData","forecastCollecter","weatherResponse","weatherData","handleSubmit","preventDefault","closePopup","className","style","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","onChange","required","placeholder","Popup","onClose","_c","_ref","onClick","_c2","$RefreshReg$"],"sources":["/root/Projektuppgift-i-introduktion-till-datalogi/forecaster/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport './weatherFetcher.js';\n\nconst weatherFetcher = require(\"./weatherFetcher\");\n\nfunction App() {\n    const [formData, setFormData] = useState({\n        date: '',\n        time: '',\n        location: '',\n    });\n\n    const [backgroundImage, setBackgroundImage] = useState(\n        \"https://images.unsplash.com/photo-1464822759023-fed622ff2c3b\"\n    );\n\n    const [showPopup, setShowPopup] = useState(false);\n    const [temperature, setTemperature] = useState(null);\n\n    const handleChange = (event) => {\n        const { name, value } = event.target;\n        console.log(name, value);\n        setFormData((prevFormData) => ({\n            ...prevFormData,\n            [name]: value,\n        }));\n    };\n\n    async function forecastCollecter(date, time, location) {\n        const weatherResponse = await weatherFetcher.weatherData(date, time, location);\n        console.log(weatherResponse);\n        setTemperature(weatherResponse.temperature); // Replace 'temperature' with the correct property name from the API response\n    }\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        console.log('Input value:', formData);\n        const {date, time, location } = formData;\n        forecastCollecter(date, time, location);\n        setShowPopup(true);\n    };\n\n    const closePopup = () => {\n        setShowPopup(false);\n    };\n\n    return (\n        <div className=\"App\" style={{ backgroundImage: `url(${backgroundImage})` }}>\n            <header className=\"App-header\">\n                <h1>Forecaster</h1>\n                <h2>Enter required information to forecast weather</h2>\n                <form onSubmit={handleSubmit}>\n                    <div className=\"input-group\">\n                        <label htmlFor=\"forecast-date\">Date:</label>\n                        <input\n                            type=\"date\"\n                            id=\"forecast-date\"\n                            value={formData.date}\n                            onChange={handleChange}\n                            name=\"date\"\n                            required\n                        />\n                    </div>\n                    <div className=\"input-group\">\n                        <label htmlFor=\"forecast-time\">Time:</label>\n                        <input\n                            type=\"time\"\n                            id=\"forecast-time\"\n                            value={formData.time}\n                            onChange={handleChange}\n                            name=\"time\"\n                            required\n                        />\n                    </div>\n                    <div className=\"input-group\">\n                        <label htmlFor=\"forecast-location\">Location:</label>\n                        <input\n                            type=\"text\"\n                            id=\"forecast-location\"\n                            value={formData.location}\n                            onChange={handleChange}\n                            placeholder=\"Enter location\"\n                            name=\"location\"\n                            required\n                        />\n                    </div>\n                    <button type=\"submit\">Submit</button>\n                </form>\n            </header>\n            {showPopup && <Popup temperature={temperature} onClose={closePopup} />}\n        </div>\n    );\n}\n\nfunction Popup({ temperature, onClose }) {\n    return (\n        <div className=\"popup\">\n            <div className=\"popup-content\">\n                <h3>Temperature</h3>\n                <p>{temperature}°C</p> {/* Replace °C with the correct unit if needed */}\n                <button onClick={onClose}>Close</button>\n            </div>\n        </div>\n    );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}