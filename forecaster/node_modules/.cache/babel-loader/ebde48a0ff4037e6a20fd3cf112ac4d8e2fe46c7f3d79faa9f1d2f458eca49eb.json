{"ast":null,"code":"const {\n  Configuration,\n  OpenAIApi\n} = require(\"openai\");\nconst configuration = new Configuration({\n  apiKey: process.env.REACT_APP_OPENAI_API_KEY\n});\nconst openai = new OpenAIApi(configuration);\n\n/**\n * Function taht uses json data for specific time and location to\n * create a picture using given weather conditions\n * @param {*} weatherResponse \n */\nexport async function dallePicture(weatherResponse, location) {\n  console.log(process.env.REACT_APP_OPENAI_API_KEY);\n  try {\n    const openai = new OpenAIApi(configuration);\n    const response = await openai.createImage({\n      prompt: `Realistic view of ${location} and the weather is ${weatherResponse.weather.description}`,\n      n: 1,\n      size: \"256x256\"\n    });\n    return response.data[0].url;\n  } catch (err) {\n    console.error(err);\n  }\n}","map":{"version":3,"names":["Configuration","OpenAIApi","require","configuration","apiKey","process","env","REACT_APP_OPENAI_API_KEY","openai","dallePicture","weatherResponse","location","console","log","response","createImage","prompt","weather","description","n","size","data","url","err","error"],"sources":["/root/Projektuppgift-i-introduktion-till-datalogi/forecaster/src/dalle.js"],"sourcesContent":["const { Configuration, OpenAIApi } = require(\"openai\");\nconst configuration = new Configuration({\n    apiKey: process.env.REACT_APP_OPENAI_API_KEY,\n});\nconst openai = new OpenAIApi(configuration);\n\n/**\n * Function taht uses json data for specific time and location to\n * create a picture using given weather conditions\n * @param {*} weatherResponse \n */\nexport async function dallePicture(weatherResponse, location) {\n    console.log(process.env.REACT_APP_OPENAI_API_KEY);\n    try {\n        const openai = new OpenAIApi(configuration);\n        const response = await openai.createImage({\n            prompt: `Realistic view of ${location} and the weather is ${weatherResponse.weather.description}`,\n            n: 1,\n            size: \"256x256\",\n        });\n        return response.data[0].url;\n    }\n    catch(err){\n        console.error(err)\n    }\n}"],"mappings":"AAAA,MAAM;EAAEA,aAAa;EAAEC;AAAU,CAAC,GAAGC,OAAO,CAAC,QAAQ,CAAC;AACtD,MAAMC,aAAa,GAAG,IAAIH,aAAa,CAAC;EACpCI,MAAM,EAAEC,OAAO,CAACC,GAAG,CAACC;AACxB,CAAC,CAAC;AACF,MAAMC,MAAM,GAAG,IAAIP,SAAS,CAACE,aAAa,CAAC;;AAE3C;AACA;AACA;AACA;AACA;AACA,OAAO,eAAeM,YAAYA,CAACC,eAAe,EAAEC,QAAQ,EAAE;EAC1DC,OAAO,CAACC,GAAG,CAACR,OAAO,CAACC,GAAG,CAACC,wBAAwB,CAAC;EACjD,IAAI;IACA,MAAMC,MAAM,GAAG,IAAIP,SAAS,CAACE,aAAa,CAAC;IAC3C,MAAMW,QAAQ,GAAG,MAAMN,MAAM,CAACO,WAAW,CAAC;MACtCC,MAAM,EAAG,qBAAoBL,QAAS,uBAAsBD,eAAe,CAACO,OAAO,CAACC,WAAY,EAAC;MACjGC,CAAC,EAAE,CAAC;MACJC,IAAI,EAAE;IACV,CAAC,CAAC;IACF,OAAON,QAAQ,CAACO,IAAI,CAAC,CAAC,CAAC,CAACC,GAAG;EAC/B,CAAC,CACD,OAAMC,GAAG,EAAC;IACNX,OAAO,CAACY,KAAK,CAACD,GAAG,CAAC;EACtB;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}