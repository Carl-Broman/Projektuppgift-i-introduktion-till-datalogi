{"ast":null,"code":"import _regeneratorRuntime from\"/root/Projektuppgift-i-introduktion-till-datalogi/forecaster/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/root/Projektuppgift-i-introduktion-till-datalogi/forecaster/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _defineProperty from\"/root/Projektuppgift-i-introduktion-till-datalogi/forecaster/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectSpread from\"/root/Projektuppgift-i-introduktion-till-datalogi/forecaster/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/root/Projektuppgift-i-introduktion-till-datalogi/forecaster/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import'./App.css';import'./weatherFetcher.js';import'./dalle.js';import'./chatgpt.js';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var weatherFetcher=require(\"./weatherFetcher\");var dalle=require(\"./dalle\");var chatgpt=require(\"./chatgpt\");function App(){var _useState=useState({date:'',time:'',location:''}),_useState2=_slicedToArray(_useState,2),formData=_useState2[0],setFormData=_useState2[1];var _useState3=useState('https://images.unsplash.com/photo-1464822759023-fed622ff2c3b'),_useState4=_slicedToArray(_useState3,2),backgroundImage=_useState4[0],setBackgroundImage=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),showPopup=_useState6[0],setShowPopup=_useState6[1];var _useState7=useState(null),_useState8=_slicedToArray(_useState7,2),temperature=_useState8[0],setTemperature=_useState8[1];var handleChange=function handleChange(event){var _event$target=event.target,name=_event$target.name,value=_event$target.value;console.log(name,value);setFormData(function(prevFormData){return _objectSpread(_objectSpread({},prevFormData),{},_defineProperty({},name,value));});};function forecastCollecter(_x,_x2,_x3){return _forecastCollecter.apply(this,arguments);}function _forecastCollecter(){_forecastCollecter=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(date,time,location){var weatherResponse,dalleResponse,chatGPTResponse,setTempVariable;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:_context2.next=2;return weatherFetcher.weatherData(date,time,location);case 2:weatherResponse=_context2.sent;// weatherResponse is json Object\nconsole.log(weatherResponse);_context2.next=6;return dalle.dallePicture(weatherResponse,location);case 6:dalleResponse=_context2.sent;// dalleResponse is url to picture currently set within dalle.js as 256x256 in quality\nconsole.log(dalleResponse);_context2.next=10;return chatgpt.chatMessage(weatherResponse,location);case 10:chatGPTResponse=_context2.sent;// chatGPTResponse is the answer from chatgpt in string\nconsole.log(chatGPTResponse);//\nsetTempVariable=weatherResponse.main.temp-272.15;setTemperature(setTempVariable.toFixed(2));// Replace 'temperature' with the correct property name from the API response\ncase 14:case\"end\":return _context2.stop();}},_callee2);}));return _forecastCollecter.apply(this,arguments);}var handleSubmit=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(event){var date,time,location;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:event.preventDefault();console.log('Input value:',formData);date=formData.date,time=formData.time,location=formData.location;forecastCollecter(date,time,location);setShowPopup(true);case 5:case\"end\":return _context.stop();}},_callee);}));return function handleSubmit(_x4){return _ref.apply(this,arguments);};}();var closePopup=function closePopup(){setShowPopup(false);};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",style:{backgroundImage:\"url(\".concat(backgroundImage,\")\")},children:[/*#__PURE__*/_jsxs(\"header\",{className:\"App-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Forecaster\"}),/*#__PURE__*/_jsx(\"h2\",{children:\"Enter required information to forecast weather\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"forecast-date\",children:\"Date:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",id:\"forecast-date\",value:formData.date,onChange:handleChange,name:\"date\",required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"forecast-time\",children:\"Time:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"time\",id:\"forecast-time\",value:formData.time,onChange:handleChange,name:\"time\",required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"forecast-location\",children:\"Location:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"forecast-location\",value:formData.location,onChange:handleChange,placeholder:\"Enter location\",name:\"location\",required:true})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Submit\"})]})]}),showPopup&&/*#__PURE__*/_jsx(Popup,{temperature:temperature,onClose:closePopup})]});}function Popup(_ref2){var temperature=_ref2.temperature,onClose=_ref2.onClose;return/*#__PURE__*/_jsx(\"div\",{className:\"popup\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"popup-content\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Temperature\"}),/*#__PURE__*/_jsxs(\"p\",{children:[temperature,\"\\xB0C\"]}),\" \",/*#__PURE__*/_jsx(\"button\",{onClick:onClose,children:\"Close\"})]})});}export default App;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","weatherFetcher","require","dalle","chatgpt","App","_useState","date","time","location","_useState2","_slicedToArray","formData","setFormData","_useState3","_useState4","backgroundImage","setBackgroundImage","_useState5","_useState6","showPopup","setShowPopup","_useState7","_useState8","temperature","setTemperature","handleChange","event","_event$target","target","name","value","console","log","prevFormData","_objectSpread","_defineProperty","forecastCollecter","_x","_x2","_x3","_forecastCollecter","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","weatherResponse","dalleResponse","chatGPTResponse","setTempVariable","wrap","_callee2$","_context2","prev","next","weatherData","sent","dallePicture","chatMessage","main","temp","toFixed","stop","handleSubmit","_ref","_callee","_callee$","_context","preventDefault","_x4","closePopup","className","style","concat","children","onSubmit","htmlFor","type","id","onChange","required","placeholder","Popup","onClose","_ref2","onClick"],"sources":["/root/Projektuppgift-i-introduktion-till-datalogi/forecaster/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport './weatherFetcher.js';\nimport './dalle.js';\nimport './chatgpt.js';\n\nconst weatherFetcher = require(\"./weatherFetcher\");\nconst dalle = require(\"./dalle\");\nconst chatgpt = require(\"./chatgpt\");\n\nfunction App() {\n    const [formData, setFormData] = useState({\n        date: '',\n        time: '',\n        location: '',\n    });\n\n    const [backgroundImage, setBackgroundImage] = useState(\n        'https://images.unsplash.com/photo-1464822759023-fed622ff2c3b'\n    );\n\n    const [showPopup, setShowPopup] = useState(false);\n    const [temperature, setTemperature] = useState(null);\n\n    const handleChange = (event) => {\n        const { name, value } = event.target;\n        console.log(name, value);\n        setFormData((prevFormData) => ({\n            ...prevFormData,\n            [name]: value,\n        }));\n    };\n\n    async function forecastCollecter(date, time, location) {\n        const weatherResponse = await weatherFetcher.weatherData(date, time, location); // weatherResponse is json Object\n        console.log(weatherResponse);\n        const dalleResponse = await dalle.dallePicture(weatherResponse, location) // dalleResponse is url to picture currently set within dalle.js as 256x256 in quality\n        console.log(dalleResponse);\n        const chatGPTResponse = await chatgpt.chatMessage(weatherResponse, location); // chatGPTResponse is the answer from chatgpt in string\n        console.log(chatGPTResponse); //\n        let setTempVariable = weatherResponse.main.temp-272.15\n        setTemperature(setTempVariable.toFixed(2)); // Replace 'temperature' with the correct property name from the API response\n    }\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        console.log('Input value:', formData);\n        const {date, time, location } = formData;\n        forecastCollecter(date, time, location);\n        setShowPopup(true);\n    };\n\n    const closePopup = () => {\n        setShowPopup(false);\n    };\n\n    return (\n        <div className=\"App\" style={{ backgroundImage: `url(${backgroundImage})` }}>\n            <header className=\"App-header\">\n                <h1>Forecaster</h1>\n                <h2>Enter required information to forecast weather</h2>\n                <form onSubmit={handleSubmit}>\n                    <div className=\"input-group\">\n                        <label htmlFor=\"forecast-date\">Date:</label>\n                        <input\n                            type=\"date\"\n                            id=\"forecast-date\"\n                            value={formData.date}\n                            onChange={handleChange}\n                            name=\"date\"\n                            required\n                        />\n                    </div>\n                    <div className=\"input-group\">\n                        <label htmlFor=\"forecast-time\">Time:</label>\n                        <input\n                            type=\"time\"\n                            id=\"forecast-time\"\n                            value={formData.time}\n                            onChange={handleChange}\n                            name=\"time\"\n                            required\n                        />\n                    </div>\n                    <div className=\"input-group\">\n                        <label htmlFor=\"forecast-location\">Location:</label>\n                        <input\n                            type=\"text\"\n                            id=\"forecast-location\"\n                            value={formData.location}\n                            onChange={handleChange}\n                            placeholder=\"Enter location\"\n                            name=\"location\"\n                            required\n                        />\n                    </div>\n                    <button type=\"submit\">Submit</button>\n                </form>\n            </header>\n            {showPopup && <Popup temperature={temperature} onClose={closePopup} />}\n        </div>\n    );\n}\n\nfunction Popup({ temperature, onClose }) {\n    return (\n        <div className=\"popup\">\n            <div className=\"popup-content\">\n                <h3>Temperature</h3>\n                <p>{temperature}°C</p> {/* Replace °C with the correct unit if needed */}\n                <button onClick={onClose}>Close</button>\n            </div>\n        </div>\n    );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}