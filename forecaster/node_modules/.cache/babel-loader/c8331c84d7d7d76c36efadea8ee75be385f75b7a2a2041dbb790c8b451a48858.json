{"ast":null,"code":"import _regeneratorRuntime from\"/root/Projektuppgift-i-introduktion-till-datalogi/forecaster/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/root/Projektuppgift-i-introduktion-till-datalogi/forecaster/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";var weatherApiKey=process.env.REACT_APP_WEATHER_API_KEY;/**\n * Function that uses location and time to gather weather data and returns json data to\n * work with for later\n * @param {String} location \n * @param {String} time \n * @param {String} date\n * @returns {String}\n */export function weatherData(_x,_x2,_x3){return _weatherData.apply(this,arguments);}function _weatherData(){_weatherData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(date,time,location){var dateString,forecastMoment,geocodingUrl,response,data,lat,lon,weatherUrl,weatherRespone,weatherData,i,compareTime;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:dateString=date+\"T\"+time+\":00.000Z\";forecastMoment=new Date(dateString);console.log(forecastMoment.toISOString());// First call to find coordinates of given location\ngeocodingUrl=\"https://api.openweathermap.org/geo/1.0/direct?q=\".concat(location,\"&limit=1&appid=\").concat(weatherApiKey);// Wait for response before saving it as data\n_context.next=6;return fetch(geocodingUrl);case 6:response=_context.sent;_context.next=9;return response.json();case 9:data=_context.sent;// Saving both coordinates of the location as lat and lon constants\nlat=data[0].lat.toString();lon=data[0].lon.toString();// Second call to find weather data for given location and time\nweatherUrl=\"https://api.openweathermap.org/data/2.5/forecast?lat=\".concat(lat,\"&lon=\").concat(lon,\"&appid=\").concat(weatherApiKey);_context.next=15;return fetch(weatherUrl);case 15:weatherRespone=_context.sent;_context.next=18;return weatherRespone.json();case 18:weatherData=_context.sent;i=0;case 20:if(!(i<weatherData.list.length)){_context.next=27;break;}compareTime=new Date(weatherData.list[i].dt_txt.replace(\" \",\"T\")+\".000Z\");if(!(compareTime>forecastMoment)){_context.next=24;break;}return _context.abrupt(\"return\",weatherData.list[i]);case 24:i++;_context.next=20;break;case 27:return _context.abrupt(\"return\",weatherData.list[weatherData.list.length-1]);case 28:case\"end\":return _context.stop();}},_callee);}));return _weatherData.apply(this,arguments);}","map":{"version":3,"names":["weatherApiKey","process","env","REACT_APP_WEATHER_API_KEY","weatherData","_x","_x2","_x3","_weatherData","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","date","time","location","dateString","forecastMoment","geocodingUrl","response","data","lat","lon","weatherUrl","weatherRespone","i","compareTime","wrap","_callee$","_context","prev","next","Date","console","log","toISOString","concat","fetch","sent","json","toString","list","length","dt_txt","replace","abrupt","stop"],"sources":["/root/Projektuppgift-i-introduktion-till-datalogi/forecaster/src/weatherFetcher.js"],"sourcesContent":["const weatherApiKey = process.env.REACT_APP_WEATHER_API_KEY;\n\n/**\n * Function that uses location and time to gather weather data and returns json data to\n * work with for later\n * @param {String} location \n * @param {String} time \n * @param {String} date\n * @returns {String}\n */\nexport async function weatherData(date, time, location) {\n    const dateString = date + \"T\" + time + \":00.000Z\";\n    const forecastMoment = new Date(dateString);\n    console.log(forecastMoment.toISOString())\n\n    // First call to find coordinates of given location\n    const geocodingUrl = `https://api.openweathermap.org/geo/1.0/direct?q=${location}&limit=1&appid=${weatherApiKey}`;\n\n    // Wait for response before saving it as data\n    const response = await fetch(geocodingUrl);\n    const data = await response.json();\n\n    // Saving both coordinates of the location as lat and lon constants\n    const lat = data[0].lat.toString();\n    const lon = data[0].lon.toString();\n\n    // Second call to find weather data for given location and time\n    const weatherUrl = `https://api.openweathermap.org/data/2.5/forecast?lat=${lat}&lon=${lon}&appid=${weatherApiKey}`;\n\n    const weatherRespone = await fetch(weatherUrl)\n    const weatherData = await weatherRespone.json();\n    let i = 0;\n    while(i < weatherData.list.length){\n        const compareTime = new Date(weatherData.list[i].dt_txt.replace(\" \", \"T\") + \".000Z\");\n        if(compareTime > forecastMoment){\n            return weatherData.list[i];\n        }\n        i++\n    }\n    return weatherData.list[weatherData.list.length - 1];\n}"],"mappings":"oTAAA,GAAM,CAAAA,aAAa,CAAGC,OAAO,CAACC,GAAG,CAACC,yBAAyB,CAE3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,eAAsB,CAAAC,WAAWA,CAAAC,EAAA,CAAAC,GAAA,CAAAC,GAAA,SAAAC,YAAA,CAAAC,KAAA,MAAAC,SAAA,GA8BhC,SAAAF,aAAA,EAAAA,YAAA,CAAAG,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CA9BM,SAAAC,QAA2BC,IAAI,CAAEC,IAAI,CAAEC,QAAQ,MAAAC,UAAA,CAAAC,cAAA,CAAAC,YAAA,CAAAC,QAAA,CAAAC,IAAA,CAAAC,GAAA,CAAAC,GAAA,CAAAC,UAAA,CAAAC,cAAA,CAAAtB,WAAA,CAAAuB,CAAA,CAAAC,WAAA,QAAAhB,mBAAA,GAAAiB,IAAA,UAAAC,SAAAC,QAAA,iBAAAA,QAAA,CAAAC,IAAA,CAAAD,QAAA,CAAAE,IAAA,SAC5Cf,UAAU,CAAGH,IAAI,CAAG,GAAG,CAAGC,IAAI,CAAG,UAAU,CAC3CG,cAAc,CAAG,GAAI,CAAAe,IAAI,CAAChB,UAAU,CAAC,CAC3CiB,OAAO,CAACC,GAAG,CAACjB,cAAc,CAACkB,WAAW,CAAC,CAAC,CAAC,CAEzC;AACMjB,YAAY,oDAAAkB,MAAA,CAAsDrB,QAAQ,oBAAAqB,MAAA,CAAkBtC,aAAa,EAE/G;AAAA+B,QAAA,CAAAE,IAAA,SACuB,CAAAM,KAAK,CAACnB,YAAY,CAAC,QAApCC,QAAQ,CAAAU,QAAA,CAAAS,IAAA,CAAAT,QAAA,CAAAE,IAAA,SACK,CAAAZ,QAAQ,CAACoB,IAAI,CAAC,CAAC,QAA5BnB,IAAI,CAAAS,QAAA,CAAAS,IAAA,CAEV;AACMjB,GAAG,CAAGD,IAAI,CAAC,CAAC,CAAC,CAACC,GAAG,CAACmB,QAAQ,CAAC,CAAC,CAC5BlB,GAAG,CAAGF,IAAI,CAAC,CAAC,CAAC,CAACE,GAAG,CAACkB,QAAQ,CAAC,CAAC,CAElC;AACMjB,UAAU,yDAAAa,MAAA,CAA2Df,GAAG,UAAAe,MAAA,CAAQd,GAAG,YAAAc,MAAA,CAAUtC,aAAa,EAAA+B,QAAA,CAAAE,IAAA,UAEnF,CAAAM,KAAK,CAACd,UAAU,CAAC,SAAxCC,cAAc,CAAAK,QAAA,CAAAS,IAAA,CAAAT,QAAA,CAAAE,IAAA,UACM,CAAAP,cAAc,CAACe,IAAI,CAAC,CAAC,SAAzCrC,WAAW,CAAA2B,QAAA,CAAAS,IAAA,CACbb,CAAC,CAAG,CAAC,cACHA,CAAC,CAAGvB,WAAW,CAACuC,IAAI,CAACC,MAAM,GAAAb,QAAA,CAAAE,IAAA,WACvBL,WAAW,CAAG,GAAI,CAAAM,IAAI,CAAC9B,WAAW,CAACuC,IAAI,CAAChB,CAAC,CAAC,CAACkB,MAAM,CAACC,OAAO,CAAC,GAAG,CAAE,GAAG,CAAC,CAAG,OAAO,CAAC,MACjFlB,WAAW,CAAGT,cAAc,GAAAY,QAAA,CAAAE,IAAA,kBAAAF,QAAA,CAAAgB,MAAA,UACpB3C,WAAW,CAACuC,IAAI,CAAChB,CAAC,CAAC,UAE9BA,CAAC,EAAE,CAAAI,QAAA,CAAAE,IAAA,yBAAAF,QAAA,CAAAgB,MAAA,UAEA3C,WAAW,CAACuC,IAAI,CAACvC,WAAW,CAACuC,IAAI,CAACC,MAAM,CAAG,CAAC,CAAC,2BAAAb,QAAA,CAAAiB,IAAA,MAAAlC,OAAA,GACvD,UAAAN,YAAA,CAAAC,KAAA,MAAAC,SAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}